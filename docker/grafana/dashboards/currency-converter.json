{
  "id": null,
  "title": "Currency Converter Analytics",
  "tags": ["currency", "conversion", "monitoring"],
  "timezone": "browser",
  "panels": [
    {
      "id": 1,
      "title": "Total Conversion Requests",
      "type": "stat",
      "gridPos": {"x": 0, "y": 0, "w": 6, "h": 6},
      "targets": [
        {
          "datasource": {"type": "influxdb", "uid": "InfluxDB"},
          "query": "from(bucket: \"currency_converter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"currency_conversion\")\n  |> count()",
          "rawQuery": true,
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "unit": "short"
        }
      }
    },
    {
        "id": 2,
        "title": "Success Rate",
        "type": "stat",
        "gridPos": {"x": 6, "y": 0, "w": 6, "h": 6},
        "targets": [
            {
            "datasource": {"type": "influxdb", "uid": "InfluxDB"},
            "query": "successful = from(bucket: \"currency_converter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"currency_conversion\")\n  |> filter(fn: (r) => r.status == \"success\")\n  |> count()\n  \ntotal = from(bucket: \"currency_converter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"currency_conversion\")\n  |> count()\n  \njoin(tables: {successful: successful, total: total}, on: [\"_time\"], method: \"inner\")\n  |> map(fn: (r) => ({\n    _value: r._value_successful / r._value_total * 100.0,\n    _time: r._time\n  }))",
            "rawQuery": true,
            "refId": "A"
            }
        ],
        "fieldConfig": {
            "defaults": {
            "color": {"mode": "thresholds"},
            "unit": "percent",
            "decimals": 1,
            "min": 0,
            "max": 100,
            "thresholds": {
                "mode": "absolute",
                "steps": [
                {"color": "red", "value": 0},
                {"color": "yellow", "value": 80},
                {"color": "green", "value": 95}
                ]
                }
            }
        }
    },
    {
      "id": 3,
      "title": "Conversion Requests Over Time",
      "type": "timeseries",
      "gridPos": {"x": 0, "y": 6, "w": 12, "h": 8},
      "targets": [
        {
          "datasource": {"type": "influxdb", "uid": "InfluxDB"},
          "query": "from(bucket: \"currency_converter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"currency_conversion\")\n  |> aggregateWindow(every: v.windowPeriod, fn: count, createEmpty: false)\n  |> yield(name: \"count\")",
          "rawQuery": true,
          "refId": "A"
        }
      ]
    },
    {
      "id": 4,
      "title": "Average Duration (ms)",
      "type": "timeseries",
      "gridPos": {"x": 0, "y": 14, "w": 6, "h": 8},
      "targets": [
        {
          "datasource": {"type": "influxdb", "uid": "InfluxDB"},
          "query": "from(bucket: \"currency_converter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"currency_conversion\")\n  |> filter(fn: (r) => r._field == \"duration_ms\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)",
          "rawQuery": true,
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "continuous-BlPu"},
          "unit": "ms"
        }
      }
    },
    {
      "id": 5,
      "title": "Top Currency Pairs",
      "type": "bargauge",
      "gridPos": {"x": 6, "y": 14, "w": 6, "h": 8},
      "targets": [
        {
          "datasource": {"type": "influxdb", "uid": "InfluxDB"},
          "query": "from(bucket: \"currency_converter\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"currency_conversion\")\n  |> group(columns: [\"from_currency\", \"to_currency\"])\n  |> count()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> limit(n: 5)",
          "rawQuery": true,
          "refId": "A"
        }
      ]
    }
  ],
  "time": {"from": "now-1h", "to": "now"},
  "timepicker": {
    "refresh_intervals": ["5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h", "2h", "1d"]
  },
  "refresh": "10s",
  "schemaVersion": 37,
  "version": 1,
  "editable": true
}